#version: "3.9"
#name: vb100

networks:
  vb100_net:

volumes:
  vb100_pgdata:

services:
  db:
    image: postgres:16
    container_name: vb100_db
    networks: [vb100_net]
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-vb100}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-vb100}
    volumes:
      - vb100_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-vb100} -d ${POSTGRES_DB:-vb100}"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: always

  api:
    build:
      context: ..
      dockerfile: deploy/api.Dockerfile
    container_name: vb100_api
    depends_on:
      db:
        condition: service_healthy
    networks: [vb100_net]
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgres://vb100:${POSTGRES_PASSWORD}@vb100_db:5432/${POSTGRES_DB:-vb100}
    ports:
      - "4000:4000"
    restart: always

  web:
    build:
      context: ..
      dockerfile: deploy/web.Dockerfile
      args:
        VITE_API_URL: /api
    container_name: vb100_web
    depends_on: [api]
    networks: [vb100_net]
    ports:
      - "8080:8080"
    restart: always
